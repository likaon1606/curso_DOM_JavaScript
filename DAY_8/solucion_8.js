// Exercise 1 - 2
const nombreUsuario = document.getElementById('nombreUsuario');  // Obtener el input donde el usuario introduce su nombre
const btnSaludo = document.getElementById('btnSaludo');  // Obtener el bot칩n que muestra el saludo
const titulo = document.getElementById('titulo');  // Obtener el t칤tulo en la p치gina

// A침adir un event listener al bot칩n para que cuando sea clickeado ejecute una funci칩n
btnSaludo.addEventListener('click', () => {
  const nombreGuardado = nombreUsuario.value;  // Obtener el valor del input del nombre

  alert(textContent = nombreGuardado);  // Mostrar una alerta con el nombre ingresado (esto tiene un peque침o error, deber칤a ser alert(nombreGuardado))

  titulo.textContent = (`Bienvenido ${nombreGuardado}`);  // Cambiar el texto del t칤tulo para saludar al usuario
});

// Exercise 3
const buttons = document.querySelectorAll('.color_btn');  // Seleccionar todos los botones que tienen la clase 'color_btn'

// Iterar sobre cada bot칩n encontrado y a침adirle un event listener para el click
buttons.forEach(button => {
  button.addEventListener('click', function () {
    const color = button.getAttribute('data-color');  // Obtener el atributo 'data-color' del bot칩n (definir칤a el color)
    document.body.style.backgroundColor = color;  // Cambiar el color de fondo de la p치gina seg칰n el atributo 'data-color'
  });
});

// Exercise 4
const agregarItem = document.getElementById('agregarItem');  // Obtener el bot칩n para agregar un nuevo 칤tem
const listaDinamica = document.getElementById('listaDinamica');  // Obtener la lista donde se agregar치n los 칤tems

// A침adir un event listener al bot칩n de agregar para crear un nuevo 칤tem en la lista
agregarItem.addEventListener('click', () => {
  const item = document.createElement('li');  // Crear un nuevo elemento de lista
  item.textContent = "nuevo item";  // Establecer el texto del 칤tem a 'nuevo item'

  listaDinamica.appendChild(item);  // Agregar el 칤tem a la lista
  // Exercise 5
  listaDinamica.addEventListener('dblclick', () => {  // A침adir un event listener para el doble clic
    listaDinamica.remove();  // Si se hace doble clic, se elimina toda la lista
  });
});

// Exercise 6
const parrafoDoble = document.getElementById('parrafoDoble');  // Obtener el p치rrafo que cambia al hacer doble clic

let parrDbl = false;  // Variable para alternar entre los dos textos

const textParrafo = parrafoDoble.textContent;  // Guardar el texto original del p치rrafo para restaurarlo

// A침adir un event listener para el doble clic en el p치rrafo
parrafoDoble.addEventListener('dblclick', () => {
  if (!parrDbl) {  // Si el texto a칰n no ha cambiado
    parrafoDoble.textContent = 'Nuevo texto';  // Cambiar el texto del p치rrafo
    parrDbl = true;  // Cambiar el estado de la variable para indicar que el texto ha sido cambiado
  } else {  // Si el texto ya ha cambiado
    parrafoDoble.textContent = textParrafo;  // Restaurar el texto original
    parrDbl = false;  // Cambiar el estado de la variable para indicar que el texto ha sido restaurado
  }
});

// Exercise 7 - 9
const cuadro = document.getElementById('cuadro');  // Obtener el elemento con id 'cuadro'

const handleMouseEvent = (e) => {  // Funci칩n para manejar los eventos del mouse (mouseover y mouseout)
  if (e.type === 'mouseover') {  // Si el evento es 'mouseover'
    cuadro.style.backgroundColor = 'cyan';  // Cambiar el color de fondo del cuadro a cian
  } else if (e.type === 'mouseout') {  // Si el evento es 'mouseout'
    cuadro.style.backgroundColor = 'orange';  // Cambiar el color de fondo del cuadro a naranja
  }
};

cuadro.addEventListener('mouseover', handleMouseEvent);  // A침adir el evento 'mouseover' al cuadro
cuadro.addEventListener('mouseout', handleMouseEvent);  // A침adir el evento 'mouseout' al cuadro

// Exercise 8
const inputTeclado = document.getElementById('inputTeclado');  // Obtener el input donde el usuario escribe

// A침adir un event listener para cuando una tecla se presiona
inputTeclado.addEventListener('keydown', (e) => {
  console.log('Tecla presionada', e.key);  // Mostrar en la consola la tecla que fue presionada
});

// A침adir un event listener para cuando una tecla se suelta
inputTeclado.addEventListener('keyup', (e) => {
  console.log('Tecla soltada', e.key);  // Mostrar en la consola la tecla que fue soltada
});

// Exercise 9 - Reutilizar funciones
function cambiarColorFondo(color) {
  document.body.style.backgroundColor = color;  // Funci칩n para cambiar el color de fondo de la p치gina
}

// Iterar sobre todos los botones con la clase 'color-btn'
document.querySelectorAll('.color-btn').forEach(btn => {
  btn.addEventListener('click', (e) => {  // A침adir un event listener para cuando se haga clic en un bot칩n
    cambiarColorFondo(e.target.textContent.toLowerCase());  // Cambiar el fondo usando el texto del bot칩n
    resaltarBoton(e.target);  // Llamar a la funci칩n para resaltar el bot칩n que se presion칩
  });
});

// Exercise 10 - Aplicar clase highlight
function resaltarBoton(boton) {
  document.querySelectorAll('.color-btn').forEach(b => b.classList.remove('highlight'));  // Eliminar la clase 'highlight' de todos los botones
  boton.classList.add('highlight');  // A침adir la clase 'highlight' al bot칩n presionado
}

// Crear y a침adir el estilo para la clase 'highlight'
const estiloHighlight = document.createElement('style');
estiloHighlight.textContent = `
  .highlight {
    border: 2px solid black;  // A침adir un borde negro al bot칩n
    transform: scale(1.1);  // Ampliar el bot칩n ligeramente
  }
`;
document.head.appendChild(estiloHighlight);  // A침adir el estilo al documento

// Exercise 11 - Deshabilitar bot칩n de saludo si input est치 vac칤o
const toggleSaludoBtn = () => {
  btnSaludo.disabled = nombreUsuario.value.trim() === "";  // Deshabilitar el bot칩n si el campo de nombre est치 vac칤o
};

nombreUsuario.addEventListener('input', toggleSaludoBtn);  // A침adir un event listener al input para que se ejecute cada vez que se cambie el texto
toggleSaludoBtn();  // Llamar a la funci칩n para inicializar el estado del bot칩n

// Exercise 12 - A침adir 칤tems solo si input no est치 vac칤o
const inputItem = document.createElement('input');  // Crear un nuevo input donde el usuario puede escribir 칤tems
inputItem.placeholder = 'Escribe un 칤tem...';  // Establecer un texto de ejemplo en el input
inputItem.type = 'text';  // Establecer el tipo de input a texto
agregarItem.parentNode.insertBefore(inputItem, agregarItem);  // Insertar el nuevo input antes del bot칩n de agregar

// A침adir un event listener para cuando se haga clic en el bot칩n de agregar
agregarItem.addEventListener('click', () => {
  const texto = inputItem.value.trim();  // Obtener el texto ingresado en el input
  if (texto !== "") {  // Si el texto no est치 vac칤o
    const item = document.createElement('li');  // Crear un nuevo 칤tem en la lista
    item.textContent = texto;  // Establecer el texto del 칤tem
    item.addEventListener('dblclick', () => item.remove());  // Eliminar el 칤tem al hacer doble clic
    listaDinamica.appendChild(item);  // A침adir el 칤tem a la lista
    inputItem.value = '';  // Limpiar el campo de texto
  }
});

// Exercise 13 - Presionar Enter en input nombre = activar saludo
nombreUsuario.addEventListener('keydown', (e) => {
  if (e.key === 'Enter' && nombreUsuario.value.trim() !== '') {  // Si la tecla Enter es presionada y el input no est치 vac칤o
    btnSaludo.click();  // Hacer clic en el bot칩n de saludo
  }
});

// Exercise 14 - Presionar Enter en input de 칤tems = agregar 칤tem
inputItem.addEventListener('keydown', (e) => {
  if (e.key === 'Enter' && inputItem.value.trim() !== '') {  // Si la tecla Enter es presionada y el input no est치 vac칤o
    agregarItem.click();  // Hacer clic en el bot칩n de agregar 칤tem
  }
});

// Exercise 15 - Bot칩n Reiniciar Todo
const reset = document.getElementById('reset');  // Obtener el bot칩n de reiniciar

reset.addEventListener('click', () => {
  // Limpiar inputs
  nombreUsuario.value = '';  // Limpiar el input de nombre
  inputTeclado.value = '';  // Limpiar el input de teclado
  inputItem.value = '';  // Limpiar el input de 칤tems
  toggleSaludoBtn();  // Actualizar el estado del bot칩n de saludo

  // Borrar lista
  listaDinamica.innerHTML = '';  // Eliminar todos los 칤tems de la lista

  // Restaurar fondo
  document.body.style.backgroundColor = '#f4f4f4';  // Restaurar el color de fondo a su valor inicial

  // Restaurar textos
  titulo.textContent = '游녦 Bienvenido a tu Mini DOM Lab';  // Restaurar el t칤tulo
  parrafoDoble.textContent = 'Haz doble clic aqu칤 para cambiarme';  // Restaurar el texto del p치rrafo
  parrDbl = false;  // Cambiar el estado de la variable para que el texto se pueda alternar nuevamente

  // Quitar highlight
  document.querySelectorAll('.color-btn').forEach(b => b.classList.remove('highlight'));  // Eliminar la clase 'highlight' de todos los botones
});
